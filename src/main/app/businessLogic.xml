<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" 
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:json="http://www.mulesoft.org/schema/mule/json"	
	 
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">

	
	<flow name="processAQueueObjectsToBatchFlow">
		<jms:inbound-endpoint topic="A" connector-ref="Active_MQ"
			doc:name="JMS Topic A">
			<jms:jmsmessage-to-object-transformer />
		</jms:inbound-endpoint>
        <byte-array-to-serializable-transformer doc:name="Byte Array to Serializable"/>

		<batch:execute name="syncAccountsBatch" doc:name="Execute syncAccountsBatch" />
		<exception-strategy ref="defaultChoiceExceptionStrategy"
			doc:name="Default Exception Strategy" />
	</flow>
	<batch:job name="syncAccountsBatch">
		<batch:threading-profile poolExhaustedAction="WAIT" />
		<batch:process-records>
			<batch:step name="foreachAccountInAGetAccountInBStep">
				<enricher source="#[payload == null ? null : payload.Id ]" target="#[payload.Id]"
					doc:name="store 'Id' in the payload">
                    <sfdc:query-single config-ref="SalesforceB" query="SELECT Id FROM Account WHERE Name = '#[payload['Name']]'" doc:name="Query Account in Salesforce Instance B"/>

				</enricher>
			</batch:step>
			<batch:step name="foreachAccountInAUpsertAccountInBStep">


				<batch:commit size="200" doc:name="Batch Commit">
                    <dw:transform-message doc:name="Remove unnecessary fields and map field types">
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $ - "LastModifiedDate"
			  - "LastModifiedById"		]]></dw:set-payload>
                    </dw:transform-message>
					<sfdc:upsert-bulk config-ref="SalesforceB"
						externalIdFieldName="Id" type="Account"
						doc:name="Upsert Accounts in Salesforce Instance B">
                        <sfdc:objects ref="#[payload]"/>

					</sfdc:upsert-bulk>
				</batch:commit>
			</batch:step>
		</batch:process-records>
		<batch:on-complete>
			<json:object-to-json-transformer
				doc:name="Transform BatchJobInstance to JSON" />
			<logger message="The SFDC Batch job has finished: #[payload]" level="INFO"
				doc:name="Log 'Batch job has finished'" />
		</batch:on-complete>
	</batch:job>

	<flow name="processBQueueObjectsToBatchFlow">
		<jms:inbound-endpoint topic="A" connector-ref="Active_MQ"
			doc:name="JMS Topic A">
			<jms:jmsmessage-to-object-transformer />
		</jms:inbound-endpoint>
        <byte-array-to-serializable-transformer doc:name="Byte Array to Serializable"/>

		<batch:execute name="dbSyncAccountsBatch" doc:name="Execute dbSyncAccountsBatch" />
		<exception-strategy ref="defaultChoiceExceptionStrategy"
			doc:name="Default Exception Strategy" />
	</flow>

	<batch:job name="dbSyncAccountsBatch">
		<batch:threading-profile poolExhaustedAction="WAIT" />
		<batch:process-records>
			<batch:step name="checkAccountInDatabaseStep">
				<enricher source="#[payload]" target="#[recordVars.account]"
					doc:name="Store payload into variable 'account'">
					<db:select config-ref="GenericDatabaseConnector"
						doc:name="Query Account by matching name from Database">
                        <db:template-query-ref name="QueryAccount"/>
                        <db:in-param name="paramName" value="#[payload.Name]"/>


					</db:select>
				</enricher>


			</batch:step>
			<batch:step name="updateAccountInDatabaseStep"
				accept-expression="#[recordVars['account'].size() &gt; 0]">
				<batch:commit size="100" doc:name="Batch Commit">
					<db:update config-ref="GenericDatabaseConnector"
						doc:name="Update account in database" bulkMode="true">
                        <db:parameterized-query><![CDATA[UPDATE Account SET
AccountNumber = #[payload['AccountNumber']], 
Description = #[payload['Description']],  
NumberOfEmployees = #[payload['NumberOfEmployees']], 
LastModifiedDate = CURRENT_TIMESTAMP
WHERE Name = #[payload['Name']]]]></db:parameterized-query>






					</db:update>
				</batch:commit>
			</batch:step>
			<batch:step name="insertAccountInDatabaseStep"
				accept-expression="#[recordVars['account'].size() == 0]">
				<batch:commit size="100" doc:name="Batch Commit">
					<db:insert config-ref="GenericDatabaseConnector"
						doc:name="Insert account in database" bulkMode="true">
                        <db:parameterized-query><![CDATA[INSERT INTO Account (
	AccountNumber,
	Description,
	Name,
	NumberOfEmployees,
	SalesforceId,
	LastModifiedById,
	LastModifiedDate
) VALUES (
	#[payload['AccountNumber']],
	#[payload['Description']],
	#[payload['Name']],
	#[payload['NumberOfEmployees']],
	#[payload['Id']],
	CURRENT_USER,
	CURRENT_TIMESTAMP
)]]></db:parameterized-query>





					</db:insert>
				</batch:commit>
			</batch:step>
		</batch:process-records>
		<batch:on-complete>

			<json:object-to-json-transformer
				doc:name="Transform BatchJobInstance to JSON" />
			<logger message="The DB Batch job has finished: #[payload]" level="INFO"
				doc:name="Log 'Batch job has finished'" />
		</batch:on-complete>
	</batch:job>

	
</mule>
